server:
  port: 8081
spring:
  kafka:
    bootstrap-servers: ENC(Ye8D/K+6VCjeDv84YdExrcYV6cBySzV/hclr2AcjvVbA7ZPip4KYbjxbkxJIZH6m8p6Ssgd2uJm25UkethFn2g==)
    consumer:
      group-id: jobgroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  batch:
    jdbc:
      initialize-schema: always
  application:
    name: goodjob_batch
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(iZ4lvadVpPWb8J2DSMJZxVt2Po4Q5MXu8Ca7Jt6A80brzS0pskZZMbzZVZM1OJSJz26SEOVMYYLpAIenG6c+GLJf80PtWe+oXUMBmC8MfQGsdyMGWaWkxWS+v4xOB5pT)
    username: ENC(mAVSIC58xLOew8Eoqox+hA==)
    password: ENC(SJoUAh3qgBbC8t7APRidV6fgQ3+npv3n)

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

scheduler:
  cron:
    job: "0 0 0/4 * * *"

accessKey:
  saramin: ENC(vAiGCHWxA7xlfVU04DkiksG8V05r4NKVzDoqYA8WbkmF7O6g6pZ/RxidyvQ4YppZd9suBjOz0lHSBVSFQ0NqkA==)

jasypt:
  encryptor:
    password: ${JASYPT_PASSWORD}


management:
  info:
    java:
      enabled: true
    os:
      enabled: true
    env:
      enabled: true
  endpoint:
    health:
      show-components: always
  endpoints:
    web:
      exposure:
        include: "prometheus,health,info,metrics,heapdump"
  metrics:
    tags:
      application: ${spring.application.name}
